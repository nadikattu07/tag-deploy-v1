name: Tag Based Deployment

on:
  push:
    tags: ['v*']   # e.g., v1.0.0
  workflow_dispatch:

jobs:
  terraform:
    name: Terraform Deploy
    runs-on: ubuntu-latest

    # No OIDC permissions
    permissions:
      contents: read

    # Global env (no secrets here)
    env:
      AWS_DEFAULT_REGION: us-east-1
      TF_IN_AUTOMATION: true

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      # Clear anything that could trigger OIDC/assume-role
      - name: Clear any OIDC/role env
        run: |
          echo "AWS_WEB_IDENTITY_TOKEN_FILE=" >> $GITHUB_ENV
          echo "AWS_ROLE_ARN=" >> $GITHUB_ENV
          echo "AWS_ROLE_SESSION_NAME=" >> $GITHUB_ENV
          echo "AWS_PROFILE=" >> $GITHUB_ENV

      # Export static access keys from repo secrets
      - name: Export AWS static credentials
        run: |
          echo "AWS_ACCESS_KEY_ID=${{ secrets.AWS_ACCESS_KEY_ID }}" >> $GITHUB_ENV
          echo "AWS_SECRET_ACCESS_KEY=${{ secrets.AWS_SECRET_ACCESS_KEY }}" >> $GITHUB_ENV
          echo "AWS_DEFAULT_REGION=${AWS_DEFAULT_REGION}" >> $GITHUB_ENV

      # Helpful for clean logs
      - name: Disable AWS CLI pager
        run: aws configure set cli_pager ""

      # Prove we're using the IAM *user* (not an assumed role)
      - name: Verify caller identity
        run: aws sts get-caller-identity --no-cli-pager

      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 1.5.5
          terraform_wrapper: false

      - name: Terraform Init
        run: terraform init -input=false

      - name: Terraform Plan
        run: terraform plan -input=false -out=tfplan -var="deploy_version=${GITHUB_REF_NAME}"

      - name: Terraform Apply
        if: startsWith(github.ref, 'refs/tags/')
        run: terraform apply -input=false -auto-approve tfplan
